def handle_pairing_request(self, req_type, device, parameter=None):
    device_address = device.split("dev_")[-1].replace("_", ":")

    if req_type == "confirm":
        self.show_confirmation_dialog(device_address, parameter)
        return  # Return immediately to avoid blocking


def show_confirmation_dialog(self, device_address, passkey):
    msg_box = QMessageBox(self)
    msg_box.setWindowTitle("Confirm Pairing")
    msg_box.setText(f"Device {device_address} requests to pair with passkey: {passkey}\nAccept?")
    msg_box.setStandardButtons(QMessageBox.Yes | QMessageBox.No)
    msg_box.setIcon(QMessageBox.Question)

    def on_response(button):
        if msg_box.standardButton(button) == QMessageBox.Yes:
            self.add_device(device_address)
            self.log.info("User accepted pairing confirmation")
        else:
            self.log.info("User rejected pairing confirmation")

    msg_box.buttonClicked.connect(on_response)
    msg_box.show()


QTimer.singleShot(0, lambda: self.show_confirmation_dialog(device_address, passkey))
